<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.flysky.coder.mapper.ReplyMapper">
  <resultMap id="BaseResultMap" type="org.flysky.coder.entity.Reply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="postid" jdbcType="INTEGER" property="postid" />
    <result column="floor_cnt" jdbcType="INTEGER" property="floorCnt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="inner_reply_floor" jdbcType="INTEGER" property="innerReplyFloor" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="anonymous" jdbcType="INTEGER" property="anonymous" />
    <result column="anonymous_name" jdbcType="VARCHAR" property="anonymousName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, type, postid, floor_cnt, created_at, inner_reply_floor, content, anonymous, 
    anonymous_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.flysky.coder.entity.Reply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply (user_id, type, postid, 
      floor_cnt, created_at, inner_reply_floor, 
      content, anonymous, anonymous_name
      )
    values (#{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER}, 
      #{floorCnt,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{innerReplyFloor,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{anonymous,jdbcType=INTEGER}, #{anonymousName,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.flysky.coder.entity.Reply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="postid != null">
        postid,
      </if>
      <if test="floorCnt != null">
        floor_cnt,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="innerReplyFloor != null">
        inner_reply_floor,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="anonymousName != null">
        anonymous_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="floorCnt != null">
        #{floorCnt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="innerReplyFloor != null">
        #{innerReplyFloor,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="anonymousName != null">
        #{anonymousName,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.flysky.coder.entity.Reply">
    update reply
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        postid = #{postid,jdbcType=INTEGER},
      </if>
      <if test="floorCnt != null">
        floor_cnt = #{floorCnt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="innerReplyFloor != null">
        inner_reply_floor = #{innerReplyFloor,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="anonymousName != null">
        anonymous_name = #{anonymousName,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.flysky.coder.entity.Reply">
    update reply
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      postid = #{postid,jdbcType=INTEGER},
      floor_cnt = #{floorCnt,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      inner_reply_floor = #{innerReplyFloor,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      anonymous = #{anonymous,jdbcType=INTEGER},
      anonymous_name = #{anonymousName,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllReplyByPostIdAndFloor" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List"/> from reply where postid=#{postId} and floor_cnt=#{floor} order by created_at DESC
  </select>
  <select id="getRepliesByPostId" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List"/> from reply where postid=#{postId} order by created_at DESC
  </select>
  <select id="getInnerReplyCountByPostIdAndFloor" resultType="java.lang.Integer">
    select count(*) from reply where postid=#{postId} and floor_cnt=#{floor}
  </select>
</mapper>