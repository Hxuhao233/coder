<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.flysky.coder.mapper.PostMapper">
  <resultMap id="BaseResultMap" type="org.flysky.coder.entity.Post">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="upvote" jdbcType="INTEGER" property="upvote" />
    <result column="downvote" jdbcType="INTEGER" property="downvote" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="anonymous" jdbcType="INTEGER" property="anonymous" />
    <result column="anonymous_name" jdbcType="VARCHAR" property="anonymousName" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="sector" jdbcType="INTEGER" property="sector" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.flysky.coder.entity.Post">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, upvote, downvote, type, anonymous, anonymous_name, created_at, updated_at, 
    sector
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.flysky.coder.entity.Post">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into post (user_id, upvote, downvote, 
      type, anonymous, anonymous_name, 
      created_at, updated_at, sector, 
      content)
    values (#{userId,jdbcType=INTEGER}, #{upvote,jdbcType=INTEGER}, #{downvote,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{anonymous,jdbcType=INTEGER}, #{anonymousName,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{sector,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.flysky.coder.entity.Post">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="upvote != null">
        upvote,
      </if>
      <if test="downvote != null">
        downvote,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="anonymousName != null">
        anonymous_name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="sector != null">
        sector,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="upvote != null">
        #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        #{downvote,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="anonymousName != null">
        #{anonymousName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sector != null">
        #{sector,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.flysky.coder.entity.Post">
    update post
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="upvote != null">
        upvote = #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        downvote = #{downvote,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="anonymousName != null">
        anonymous_name = #{anonymousName,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sector != null">
        sector = #{sector,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.flysky.coder.entity.Post">
    update post
    set user_id = #{userId,jdbcType=INTEGER},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      anonymous = #{anonymous,jdbcType=INTEGER},
      anonymous_name = #{anonymousName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      sector = #{sector,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.flysky.coder.entity.Post">
    update post
    set user_id = #{userId,jdbcType=INTEGER},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      anonymous = #{anonymous,jdbcType=INTEGER},
      anonymous_name = #{anonymousName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      sector = #{sector,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>