<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.flysky.coder.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="org.flysky.coder.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="column_id" jdbcType="INTEGER" property="columnId" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="parse_type" jdbcType="INTEGER" property="parseType" />
    <result column="upvote_count" jdbcType="INTEGER" property="upvoteCount" />
    <result column="collect_count" jdbcType="INTEGER" property="collectCount" />
    <result column="downvote_count" jdbcType="INTEGER" property="downvoteCount" />
  </resultMap>
  <resultMap id="ArticleWrapperResultMap" type="org.flysky.coder.entity.wrapper.ArticleWrapper" extends="BaseResultMap">
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="columnname" jdbcType="VARCHAR" property="column" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, content, user_id, created_at, updated_at, column_id, is_deleted,
    parse_type, upvote_count, collect_count, downvote_count
  </sql>
  <sql id="ArticleWrapper_Column_List">
    a.id,a.name,a.description,a.content,a.user_id,a.created_at,a.updated_at,a.column_id,a.is_deleted,parse_type, a.upvote_count, a.collect_count, a.downvote_count, u.username, c.name columnname
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <select id="getArticleWrapperByUserId" parameterType="java.lang.Integer" resultMap="ArticleWrapperResultMap">
    select
    a.id,a.name,a.description,a.content,a.user_id,a.created_at,a.updated_at,a.column_id,a.is_deleted,parse_type, a.upvote_count, a.collect_count, a.downvote_count, u.username
    from article a JOIN user u on a.user_id = u.id
    where a.user_id = #{userId} and a.is_deleted = 0
  </select>
  <select id="getArticleWrapperById" parameterType="java.lang.Integer" resultMap="ArticleWrapperResultMap">
    select
    <include refid="ArticleWrapper_Column_List" />
    from (article a JOIN user u on a.user_id = u.id) JOIN `column` c on a.column_id = c.id
    where a.id = #{id,jdbcType=INTEGER} and a.is_deleted = 0
  </select>
  <select id="hasArticleName" parameterType="java.lang.String" resultType="java.lang.Boolean">
    select
    count(1)
    from article
    where name = #{name}
  </select>
  <select id="getArticleWrapperByInfo" parameterType="java.lang.String" resultMap="ArticleWrapperResultMap">
    select
    <include refid="ArticleWrapper_Column_List" />
    from (article a JOIN user u on a.user_id = u.id) JOIN `column` c on a.column_id = c.id
    where a.name LIKE "%"#{info}"%" and a.is_deleted = 0
  </select>
  <select id="getArticleWrapperByColumnId" parameterType="java.lang.Integer" resultMap="ArticleWrapperResultMap">
    select
    <include refid="ArticleWrapper_Column_List" />
    from (article a JOIN user u on a.user_id = u.id) JOIN `column` c on a.column_id = c.id
    where a.column_id = #{columnId} and a.is_deleted = 0
  </select>
  <select id="getCollectedArticleWrapperByUserId" parameterType="java.lang.Integer" resultMap="ArticleWrapperResultMap">
    select
    <include refid="ArticleWrapper_Column_List" />
    from ((user_collect_article ca JOIN article a on ca.article_id = a.id) JOIN user u on a.user_id = u.id) JOIN `column` c on a.column_id = c.id
    where uc.user_id = #{userId} and a.is_deleted = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.flysky.coder.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (name, description, content,
    user_id, created_at, updated_at,
    column_id, is_deleted, parse_type,
    upvote_count, collect_count, downvote_count
    )
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
    #{userId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
    #{columnId,jdbcType=INTEGER}, #{isDeleted,jdbcType=BIT}, #{parseType,jdbcType=INTEGER},
    #{upvoteCount,jdbcType=INTEGER}, #{collectCount,jdbcType=INTEGER}, #{downvoteCount,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="org.flysky.coder.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="columnId != null">
        column_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="parseType != null">
        parse_type,
      </if>
      <if test="upvoteCount != null">
        upvote_count,
      </if>
      <if test="collectCount != null">
        collect_count,
      </if>
      <if test="downvoteCount != null">
        downvote_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="columnId != null">
        #{columnId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="parseType != null">
        #{parseType,jdbcType=INTEGER},
      </if>
      <if test="upvoteCount != null">
        #{upvoteCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="downvoteCount != null">
        #{downvoteCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.flysky.coder.entity.Article">
    update article
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="columnId != null">
        column_id = #{columnId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="parseType != null">
        parse_type = #{parseType,jdbcType=INTEGER},
      </if>
      <if test="upvoteCount != null">
        upvote_count = #{upvoteCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        collect_count = #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="downvoteCount != null">
        downvote_count = #{downvoteCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.flysky.coder.entity.Article">
    update article
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      column_id = #{columnId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT},
      parse_type = #{parseType,jdbcType=INTEGER},
      upvote_count = #{upvoteCount,jdbcType=INTEGER},
      collect_count = #{collectCount,jdbcType=INTEGER},
      downvote_count = #{downvoteCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>