<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.flysky.coder.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="org.flysky.coder.entity.Room">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="home_id" jdbcType="INTEGER" property="homeId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <resultMap id="RoomWrapperResultMap" type="org.flysky.coder.entity.wrapper.RoomWrapper" extends="BaseResultMap">
    <result column="username" property="username"/>
    <result column="homename" property="home"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, home_id, created_at, updated_at, user_id, is_deleted
  </sql>
  <sql id="RoomWrapper_Column_List">
    r.id, r.name, r.description, r.home_id, r.created_at, r.updated_at, r.user_id, r.is_deleted , u.username, h.name 'homename'
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <select id="getRoomWrapperById" parameterType="java.lang.Integer" resultMap="RoomWrapperResultMap">
    select
    <include refid="RoomWrapper_Column_List" />
    from (room r JOIN user u on r.user_id = u.id) JOIN home h on r.home_id = h.id
    where r.id = #{id,jdbcType=INTEGER} and r.is_deleted = 0
  </select>
  <select id="getRoomWrappersByHomeId" parameterType="java.lang.Integer" resultMap="RoomWrapperResultMap">
    select
    <include refid="RoomWrapper_Column_List" />
    from (room r JOIN user u on r.user_id = u.id) JOIN home h on r.home_id = h.id
    where r.home_id = #{homeId,jdbcType=INTEGER} and r.is_deleted = 0
  </select>
  <select id="getRoomWrappersByInfo" parameterType="java.lang.String" resultMap="RoomWrapperResultMap">
    select
    <include refid="RoomWrapper_Column_List" />
    from (room r JOIN user u on r.user_id = u.id) JOIN home h on r.home_id = h.id
    where r.name LIKE "%"#{info}"%" and r.is_deleted = 0
  </select>
  <select id="getAllRoomsByHomeId" parameterType="java.lang.Integer" resultMap="RoomWrapperResultMap">
    select
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="hasRoomName" parameterType="java.lang.String" resultType="java.lang.Boolean">
    select count(1)
    from room
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.flysky.coder.entity.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (name, description, home_id, 
      created_at, updated_at, user_id, 
      is_deleted)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{homeId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.flysky.coder.entity.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="homeId != null">
        home_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="homeId != null">
        #{homeId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.flysky.coder.entity.Room">
    update room
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="homeId != null">
        home_id = #{homeId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.flysky.coder.entity.Room">
    update room
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      home_id = #{homeId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>